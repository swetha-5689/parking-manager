{"ast":null,"code":"var _jsxFileName = \"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/ViewCurrent.js\";\n//import React from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios'; //import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\nexport default class ViewCurrent extends Component {\n  constructor() {\n    super();\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.state = {\n      base_rate: \"Try refreshing\",\n      base_rate_mult: \"Try refreshing\",\n      min_thresh: \"Try refreshing\",\n      max_thresh: \"Try refreshing\",\n      test: [1],\n      new_base_rate: \"\",\n      new_base_rate_mult: \"\",\n      new_min_thresh: \"\",\n      new_max_thresh: \"\",\n      total_projected_revenue: \"\",\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Static Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }, {\n          label: \"Live Model Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, 86, 27, 90]\n        }]\n      }\n    };\n  }\n\n  onFormSubmit() {\n    console.log('Hi!!');\n    let updateArray = {\n      base_rate: this.state.new_base_rate,\n      base_rate_mult: this.state.new_base_rate_mult,\n      min_thresh: this.state.new_min_thresh,\n      max_thresh: this.state.new_max_thresh\n    }; //alert(JSON.stringify(updateArray, null, '  '));\n\n    axios.post('http://localhost:5000/api/liveprice', updateArray).then(function (response) {\n      alert(JSON.stringify(response, null, '  '));\n    }); // \n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/api/liverevenue').then(livePriceModel => this.setState({\n      base_rate: livePriceModel.data[0].base_rate,\n      base_rate_mult: livePriceModel.data[0].base_rate_mult,\n      min_thresh: livePriceModel.data[0].min_thresh,\n      max_thresh: livePriceModel.data[0].max_thresh,\n      total_projected_revenue: livePriceModel.data[0].total_proj_rev,\n      test: [1],\n      new_base_rate: \"\",\n      new_base_rate_mult: \"\",\n      new_min_thresh: \"\",\n      new_max_thresh: \"\",\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Dynamic Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: livePriceModel.data[0].live_revenue\n        }, {\n          label: \"Static Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: livePriceModel.data[0].static_revenue\n        }]\n      }\n    })); //this data access reference. took forever to figure out\n    //console.log(this.state.dataLine.labels);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Dynamic vs. Base Rate Revenue\"), React.createElement(Line, {\n      data: this.state.dataLine,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Revenue based on admin defined values: $\", this.state.total_projected_revenue))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Base Rate:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"$\", this.state.base_rate, \"/hr\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Rate Multiplier:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.base_rate_mult)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Min. Occ. Thresh:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.min_thresh, \"%\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Max. Occ. Thresh:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.max_thresh, \"%\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"$\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Base Rate\",\n      onChange: e => this.setState({\n        new_base_rate: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"x\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Base Rate Multiplier\",\n      onChange: e => this.setState({\n        new_base_rate_mult: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"%\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Min. Threshold Percent\",\n      onChange: e => this.setState({\n        new_min_thresh: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"%\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Max. Threshold Percent\",\n      onChange: e => this.setState({\n        new_max_thresh: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Make Live\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/ViewCurrent.js"],"names":["React","Component","axios","Line","MDBContainer","Container","Row","Col","Button","InputGroup","InputGroupText","InputGroupAddon","Input","ViewCurrent","constructor","onFormSubmit","bind","state","base_rate","base_rate_mult","min_thresh","max_thresh","test","new_base_rate","new_base_rate_mult","new_min_thresh","new_max_thresh","total_projected_revenue","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","console","log","updateArray","post","then","response","alert","JSON","stringify","componentDidMount","get","livePriceModel","setState","total_proj_rev","live_revenue","static_revenue","render","responsive","e","target","value"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\n\nexport default class ViewCurrent extends Component {\n    constructor(){\n    super();\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.state = {\n        base_rate: \"Try refreshing\",\n        base_rate_mult: \"Try refreshing\",\n        min_thresh: \"Try refreshing\",\n        max_thresh: \"Try refreshing\",\n        test: [1],\n        new_base_rate: \"\",\n        new_base_rate_mult: \"\",\n        new_min_thresh: \"\",\n        new_max_thresh: \"\",\n        total_projected_revenue: \"\",\n        dataLine: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Static Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [65, 59, 80, 81, 56, 55, 40]\n              \n            },\n            {\n              label: \"Live Model Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [28, 48, 40, 19, 86, 27, 90]\n            }\n          ]\n        }\n      }\n    }\n    onFormSubmit(){\n        console.log('Hi!!');\n        let updateArray = {base_rate: this.state.new_base_rate, base_rate_mult: this.state.new_base_rate_mult,\n                            min_thresh: this.state.new_min_thresh, max_thresh: this.state.new_max_thresh};\n        //alert(JSON.stringify(updateArray, null, '  '));\n        axios.post('http://localhost:5000/api/liveprice', updateArray).then(function(response){ \n            alert(JSON.stringify(response, null, '  '));\n        })\n       // \n    }\n      componentDidMount(){\n          axios.get('http://localhost:5000/api/liverevenue').then(livePriceModel => this.setState({\n            base_rate: livePriceModel.data[0].base_rate,\n            base_rate_mult: livePriceModel.data[0].base_rate_mult,\n            min_thresh: livePriceModel.data[0].min_thresh,\n            max_thresh: livePriceModel.data[0].max_thresh,\n            total_projected_revenue: livePriceModel.data[0].total_proj_rev,\n            test: [1],\n            new_base_rate: \"\",\n            new_base_rate_mult: \"\",\n            new_min_thresh: \"\",\n            new_max_thresh: \"\",\n            dataLine: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Dynamic Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: livePriceModel.data[0].live_revenue\n                  \n                },\n                {\n                  label: \"Static Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: livePriceModel.data[0].static_revenue\n                }\n              ]\n            }\n          }));\n          //this data access reference. took forever to figure out\n          \n          //console.log(this.state.dataLine.labels);\n      }\n    render() {\n      return (\n        <Container>\n        <Row>\n            <MDBContainer>\n            <h3 className=\"mt-5\">Dynamic vs. Base Rate Revenue</h3>\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\n            </MDBContainer>\n        </Row>\n        <Row>\n            <Col>\n            <p></p>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            <h5>Revenue based on admin defined values: ${this.state.total_projected_revenue}</h5>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Base Rate:\n            </Col>\n            <Col>\n            ${this.state.base_rate}/hr\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Rate Multiplier:\n            </Col>\n            <Col>\n            {this.state.base_rate_mult}\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Min. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.min_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Max. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.max_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <form onSubmit={this.onFormSubmit}>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>$</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Base Rate\" \n            \n            onChange = {e => this.setState({new_base_rate: e.target.value})}\n            />\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>x</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Base Rate Multiplier\" \n            \n            onChange = {e => this.setState({new_base_rate_mult: e.target.value})}/>\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>%</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Min. Threshold Percent\" \n            \n            onChange = {e => this.setState({new_min_thresh: e.target.value})}\n            />\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n        <Col sm='4'>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>%</InputGroupText>\n            </InputGroupAddon>\n            <Input \n            type = \"text\"\n            name = \"text\"\n            placeholder = \"Max. Threshold Percent\" \n            \n            onChange = {e => this.setState({new_max_thresh: e.target.value})}\n            />\n        </InputGroup>\n        </Col>\n        </Row>\n        <Row>\n            <p></p>\n        </Row>\n        <Row>\n            <Button type = \"submit\" color=\"primary\">Make Live</Button>\n        </Row>\n        </form>\n        </Container>\n      \n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}