{"ast":null,"code":"var _jsxFileName = \"/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/ViewCurrent.js\";\n//import React from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios'; //import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\nexport default class ViewCurrent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      base_rate: \"Try refreshing\",\n      base_rate_mult: \"Try refreshing\",\n      min_thresh: \"Try refreshing\",\n      max_thresh: \"Try refreshing\",\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Static Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }, {\n          label: \"Live Model Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, 86, 27, 90]\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/api/liverevenue').then(livePriceModel => this.setState({\n      base_rate: livePriceModel.data[0].base_rate,\n      base_rate_mult: livePriceModel.data[0].base_rate_mult,\n      min_thresh: livePriceModel.data[0].min_thresh,\n      max_thresh: livePriceModel.data[0].max_thresh,\n      dataLine: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n        datasets: [{\n          label: \"Dynamic Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: livePriceModel.data[0].live_revenue\n        }, {\n          label: \"Static Revenue\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: livePriceModel.data[0].static_revenue\n        }]\n      }\n    })); //this data access reference. took forever to figure out\n\n    console.log(this.state.base_rate); //console.log(this.state.dataLine.labels);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Dynamic vs. Base Rate Revenue\"), React.createElement(Line, {\n      data: this.state.dataLine,\n      options: {\n        responsive: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Revenue based on admin defined values: \"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Base Rate:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"$\", this.state.base_rate, \"/hr\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Rate Multiplier:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.base_rate_mult)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Min. Occ. Thresh:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.min_thresh, \"%\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Max. Occ. Thresh:\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.max_thresh, \"%\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Base Rate\")), React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/charlesowen/Google Drive/Rutgers/Spring 20/SW E/project/MERNtut/client/src/components/ViewCurrent.js"],"names":["React","Component","axios","Line","MDBContainer","Container","Row","Col","InputGroup","InputGroupText","InputGroupAddon","Input","ViewCurrent","constructor","state","base_rate","base_rate_mult","min_thresh","max_thresh","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","componentDidMount","get","then","livePriceModel","setState","live_revenue","static_revenue","console","log","render","responsive"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\n\nexport default class ViewCurrent extends Component {\n    constructor(){\n    super();\n    this.state = {\n        base_rate: \"Try refreshing\",\n        base_rate_mult: \"Try refreshing\",\n        min_thresh: \"Try refreshing\",\n        max_thresh: \"Try refreshing\",\n        dataLine: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                    \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n          datasets: [\n            {\n              label: \"Static Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(225, 204,230, .3)\",\n              borderColor: \"rgb(205, 130, 158)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(205, 130,1 58)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [65, 59, 80, 81, 56, 55, 40]\n              \n            },\n            {\n              label: \"Live Model Revenue\",\n              fill: true,\n              lineTension: 0.3,\n              backgroundColor: \"rgba(184, 185, 210, .3)\",\n              borderColor: \"rgb(35, 26, 136)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgb(35, 26, 136)\",\n              pointBackgroundColor: \"rgb(255, 255, 255)\",\n              pointBorderWidth: 10,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n              pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [28, 48, 40, 19, 86, 27, 90]\n            }\n          ]\n        }\n      }\n    }\n      componentDidMount(){\n          axios.get('http://localhost:5000/api/liverevenue').then(livePriceModel => this.setState({\n            base_rate: livePriceModel.data[0].base_rate,\n            base_rate_mult: livePriceModel.data[0].base_rate_mult,\n            min_thresh: livePriceModel.data[0].min_thresh,\n            max_thresh: livePriceModel.data[0].max_thresh,\n            dataLine: {\n              labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\",\n                        \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"],\n              datasets: [\n                {\n                  label: \"Dynamic Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(225, 204,230, .3)\",\n                  borderColor: \"rgb(205, 130, 158)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(205, 130,1 58)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: livePriceModel.data[0].live_revenue\n                  \n                },\n                {\n                  label: \"Static Revenue\",\n                  fill: true,\n                  lineTension: 0.3,\n                  backgroundColor: \"rgba(184, 185, 210, .3)\",\n                  borderColor: \"rgb(35, 26, 136)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgb(35, 26, 136)\",\n                  pointBackgroundColor: \"rgb(255, 255, 255)\",\n                  pointBorderWidth: 10,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                  pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: livePriceModel.data[0].static_revenue\n                }\n              ]\n            }\n          }));\n          //this data access reference. took forever to figure out\n          console.log(this.state.base_rate);\n          //console.log(this.state.dataLine.labels);\n      }\n    render() {\n      return (\n        <Container>\n        <Row>\n            <MDBContainer>\n            <h3 className=\"mt-5\">Dynamic vs. Base Rate Revenue</h3>\n            <Line data={this.state.dataLine} options={{ responsive: true }} />\n            </MDBContainer>\n        </Row>\n        <Row>\n            <Col>\n            <p></p>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n            <h5>Revenue based on admin defined values: </h5>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Base Rate:\n            </Col>\n            <Col>\n            ${this.state.base_rate}/hr\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Rate Multiplier:\n            </Col>\n            <Col>\n            {this.state.base_rate_mult}\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Min. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.min_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <Col sm=\"2\">\n            Max. Occ. Thresh:\n            </Col>\n            <Col>\n            {this.state.max_thresh}%\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>Base Rate</InputGroupText>\n            </InputGroupAddon>\n            <Input />\n            </InputGroup>\n            </Col>\n        </Row>\n        </Container>\n      \n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}